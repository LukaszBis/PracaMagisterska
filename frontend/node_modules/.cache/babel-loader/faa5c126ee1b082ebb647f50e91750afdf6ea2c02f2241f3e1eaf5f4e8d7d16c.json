{"ast":null,"code":"var _jsxFileName = \"E:\\\\PracaMagisterska\\\\frontend\\\\src\\\\components\\\\RegisterTopic.js\",\n  _s = $RefreshSig$();\n// components/RegisterTopic.js\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterTopic = () => {\n  _s();\n  const [topic, setTopic] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const apiUrl = 'http://localhost:8080/register';\n    const requestBody = {\n      topic: topic\n    };\n    console.log(requestBody);\n    fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestBody)\n    }).then(response => {\n      if (response.status === 500) {\n        throw new Error('Błąd serwera');\n      }\n      return response.json();\n    }).then(data => {\n      if (data.success) {\n        document.location.href = '/welcome';\n      }\n    });\n    console.log('Zarejestrowano temat:', topic);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Zarejestruj Temat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: topic,\n        onChange: e => setTopic(e.target.value),\n        placeholder: \"Nazwa Tematu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Zarejestruj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterTopic, \"6R+/kBJQRXSq261mLQ0MHxjhaLM=\");\n_c = RegisterTopic;\nexport default RegisterTopic;\nvar _c;\n$RefreshReg$(_c, \"RegisterTopic\");","map":{"version":3,"names":["React","useState","Form","Button","jsxDEV","_jsxDEV","RegisterTopic","_s","topic","setTopic","handleSubmit","e","preventDefault","apiUrl","requestBody","console","log","fetch","method","headers","body","JSON","stringify","then","response","status","Error","json","data","success","document","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Control","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["E:/PracaMagisterska/frontend/src/components/RegisterTopic.js"],"sourcesContent":["// components/RegisterTopic.js\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nconst RegisterTopic = () => {\n  const [topic, setTopic] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    const apiUrl = 'http://localhost:8080/register';\n    \n      const requestBody = {\n        topic: topic,\n      };\n  \n      console.log(requestBody)\n\n      fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody),\n      })\n        .then((response) => {\n          if (response.status === 500) {\n            throw new Error('Błąd serwera');\n          }\n          return response.json();\n        })\n        .then((data) => {\n          if(data.success){\n            document.location.href = '/welcome';\n          }\n        })\n\n\n\n    console.log('Zarejestrowano temat:', topic);\n  };\n\n  return (\n    <div>\n      <h2>Zarejestruj Temat</h2>\n      <Form onSubmit={handleSubmit}>\n        <Form.Control \n          type=\"text\"\n          value={topic}\n          onChange={(e) => setTopic(e.target.value)}\n          placeholder=\"Nazwa Tematu\"\n        />\n        <Button type=\"submit\">Zarejestruj</Button>\n      </Form>\n    </div>\n    \n  );\n};\n\nexport default RegisterTopic;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,MAAM,GAAG,gCAAgC;IAE7C,MAAMC,WAAW,GAAG;MAClBN,KAAK,EAAEA;IACT,CAAC;IAEDO,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;IAExBG,KAAK,CAACJ,MAAM,EAAE;MACZK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,WAAW;IAClC,CAAC,CAAC,CACCS,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;MACjC;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd,IAAGA,IAAI,CAACC,OAAO,EAAC;QACdC,QAAQ,CAACC,QAAQ,CAACC,IAAI,GAAG,UAAU;MACrC;IACF,CAAC,CAAC;IAINjB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAER,KAAK,CAAC;EAC7C,CAAC;EAED,oBACEH,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhC,OAAA,CAACH,IAAI;MAACoC,QAAQ,EAAE5B,YAAa;MAAAuB,QAAA,gBAC3B5B,OAAA,CAACH,IAAI,CAACqC,OAAO;QACXC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjC,KAAM;QACbkC,QAAQ,EAAG/B,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACgC,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC;MAAc;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFhC,OAAA,CAACF,MAAM;QAACqC,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGV,CAAC;AAAC9B,EAAA,CArDID,aAAa;AAAAuC,EAAA,GAAbvC,aAAa;AAuDnB,eAAeA,aAAa;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}